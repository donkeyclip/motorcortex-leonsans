!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r(require("@donkeyclip/motorcortex")):"function"==typeof define&&define.amd?define(["@donkeyclip/motorcortex"],r):(t="undefined"!=typeof globalThis?globalThis:t||self)["@donkeyclip/motorcortex-leonsans"]=r(t.MotorCortex)}(this,(function(t){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var i=r(t);const e=1,s=.49,n=2*Math.PI;function a(t,r){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const n=t.rect.w*s*r,a=(t.rect.h+220)*s*r;return{x:i,y:e,w:n,h:a}}function o(t,r,i){return{x:t/2,y:(r-130*s*i)/2}}function l(t,r,i){return{r:r,cr:i,fr1:1,fr2:.78,gx1:t.ratio.x1,gx2:t.ratio.x2,gy1:t.ratio.y1,gy2:t.ratio.y2}}function h(t,r,i,e,s){let n=(e-s)/(r-i)*(t-i)+s;return n<s?n=s:n>e&&(n=e),n}function f(t){const r=t.typo.p.length,i=[];let e,s,n,a,o,l,f,c,y,p,d;for(e=0;e<r;e++)for(o=t.typo.p[e],a=o.cv.length,s=0;s<a;s++){if(l=o.cv[s],f=l.addRect(t.rect),c=o.d,y=t.pointsLength.lengths[e],p=y/t.pointsLength.max,d=0,e>0)for(n=0;n<e;n++)d+=t.pointsLength.lengths[n]/t.pointsLength.max;p+=d,i.push({pos:f,drawing:t.drawing,direction:c,lengths:y,maxDrawing:p,minDrawing:d,closePath:l.ratio.c,stroke:(t,r)=>{const i=h(r.drawing.value,r.maxDrawing,r.minDrawing,1,0);if(i>0&&"a"!=r.pos.type){const e=r.lengths*i;t.setLineDash([r.lengths]),t.lineDashOffset=r.direction*(e+r.lengths),t.stroke()}}})}return i}function c(t,r){const i=t.length,e=[];let s,n,a;for(s=0;s<i;s++)a=t[s],n=a.addRect(r.rect),e.push(n);return e}function y(t,r){const i=r.lines.length;let e,s,a;for(e=0;e<i;e++)s=r.lines[e],a=s.pos,"a"==a.type?(t.beginPath(),t.arc(a.x,a.y,a.radius*s.drawing.value,0,n),t.fill(),t.closePath()):"m"==a.type?(t.beginPath(),t.moveTo(a.x,a.y)):"l"==a.type?t.lineTo(a.x,a.y):"b"==a.type&&t.bezierCurveTo(a.x,a.y,a.x2,a.y2,a.x3,a.y3),s.stroke(t,s)}function p(t,r){t.save(),t.lineWidth=1;let i,e=r.lines.length;for(i=0;i<e;i++)g(t,r.lines[i]);for(t.restore(),t.save(),t.lineWidth=1,e=r.typo.p.length,i=0;i<e;i++)d(t,r.typo.p[i],r);t.restore()}function d(t,r,i){const e=r.v.length;let s,a,o;for(s=0;s<e;s++)a=r.cv[s],o=a.addRect(i.rect),"b"==a.type?(t.fillStyle="#ff2a00",t.beginPath(),t.arc(o.x3+(o.x3-o.x2),o.y3+(o.y3-o.y2),1.5,0,n),t.fill(),t.beginPath(),t.arc(o.x2,o.y2,1.5,0,n),t.fill(),t.beginPath(),t.moveTo(o.x2,o.y2),t.lineTo(o.x3,o.y3),t.lineTo(o.x3+(o.x3-o.x2),o.y3+(o.y3-o.y2)),t.stroke(),t.beginPath(),t.fillStyle="#ffffff",t.arc(o.x3,o.y3,2.5,0,n),t.fill(),t.stroke()):(t.beginPath(),t.fillStyle="#ffffff",t.strokeStyle="#ff2a00",t.arc(o.x,o.y,2.5,0,n),t.fill(),t.stroke())}function g(t,r){const i=r.pos;"a"!=i.type&&("m"==i.type?(t.strokeStyle="#ff2a00",t.beginPath(),t.moveTo(i.x,i.y)):"l"==i.type?t.lineTo(i.x,i.y):"b"==i.type&&t.bezierCurveTo(i.x,i.y,i.x2,i.y2,i.x3,i.y3),t.stroke())}function x(t,r){t.save(),t.beginPath(),t.lineWidth=1,t.strokeStyle="#aaaaaa";const i=r.guide.length;let e,s;for(e=0;e<i;e++)s=r.rect.y+r.grid[e],t.moveTo(r.rect.x,s),t.lineTo(r.rect.x+r.rect.w,s);t.stroke(),t.lineWidth=1,t.beginPath(),t.strokeStyle="#aaaaaa",t.rect(r.rect.x,r.rect.y,r.rect.w,r.rect.h),t.stroke(),t.restore()}const u=Math.cos,b=Math.sin;function v(t,r,i,e,s,a){const o=r.wavePaths.length,l=function(t,r){return 120*t*r}(e,i);let h,f,c,y,p;const d=[];for(t.beginPath(),h=0;h<o;h++){if(f=r.wavePaths[h],a){const t=Math.random()*l-l/2,r=Math.random()*l-l/2;f.rx=f.x+t*u(f.rotation),f.ry=f.y+t*b(f.rotation),f.sx=f.x+t,f.sy=f.y+r}"a"==f.type?d.push(f):1==f.start?t.moveTo(f.x,f.y):f.fix?t.lineTo(f.x,f.y):s<110?(c=r.wavePaths[h-1],c&&(y=c.x+.5*(f.x-c.x),p=c.y+.5*(f.y-c.y),t.quadraticCurveTo(y,p,f.rx,f.ry))):t.lineTo(f.rx,f.ry)}for(t.stroke(),h=0;h<d.length;h++)f=d[h],t.beginPath(),t.arc(f.x,f.y,f.radius,0,n),t.fill()}function m(t,r,i,e){const s=Math.round(r.paths.length*r.drawing.value),a=i/2,o=i/3,l=e/2;let h,f;for(h=0;h<s;h++)f=r.paths[h],1==f.num?t.fillStyle="#ff00c5":t.fillStyle="#ff95f8","a"==f.type?(t.beginPath(),t.arc(f.x,f.y,o,0,n),t.fill()):(t.beginPath(),t.save(),t.translate(f.x,f.y),t.rotate(f.rotation),t.fillRect(-a,-l,i,e),t.restore())}function S(t,r,i,e){let s=e.length;const n=(r+s*(Math.abs(r/10|0)+1))%s;if(Array.isArray(e[n])){s=e[n].length;const r=1/(s+1),a=t.createLinearGradient(i.rect.x,i.rect.y,i.rect.x,i.rect.y+i.rect.h);let o;for(a.addColorStop(r,e[n][0]),o=0;o<s;o++)a.addColorStop(r*(o+1),e[n][o]);a.addColorStop(r*(s+1),e[n][s-1]),t.strokeStyle=a,t.fillStyle=a}else t.strokeStyle=e[n],t.fillStyle=e[n]}function O(t,r){const i=t.typo.p.length;let e,s,n,a=0;const o=[],l=[];for(n=0;n<i;n++)s=t.typo.p[n],e=J(t,s.v,r),a+=e.l,o.push(e.v),l.push(e.l);return{max:a,lines:o,lengths:l}}function J(t,r,i){const e=r.length;let s,n,a,o,l,h,f=0;const c=[];for(s=0;s<e;s++)n=r[s],a={},l=n.convert(t,i),0==s||"a"==n.type?(a.x1=l.x,a.y1=l.y,a.distance=0,a.radius=l.radius):(o=h.convert(t,i),"b"==h.type?(a.x1=o.x3,a.y1=o.y3):(a.x1=o.x,a.y1=o.y),a.x2=l.x,a.y2=l.y,"b"==n.type?(a.x3=l.x2,a.y3=l.y2,a.x4=l.x3,a.y4=l.y3,a.distance=N(a.x1,a.y1,a.x2,a.y2,a.x3,a.y3,a.x4,a.y4)):a.distance=w(a.x1,a.y1,a.x2,a.y2)),a.type=n.type,a.rotation=n.ratio.r,a.pat=n.ratio.p,a.fix=n.ratio.f,a.vt=n.ratio.v,c.push(a),f+=a.distance,h=n;return{v:c,l:f}}function N(t,r,i,e,s,n,a,o,l){const h=l||40;let f,c,y,p,d=0,g=t,x=r;for(y=1;y<h;y++)p=_(y/h,t,r,i,e,s,n,a,o),f=p.x-g,c=p.y-x,d+=Math.sqrt(f*f+c*c),g=p.x,x=p.y;return f=a-g,c=o-x,d+=Math.sqrt(f*f+c*c),d}function _(t,r,i,e,s,n,a,o,l){return r+=(e-r)*t,i+=(s-i)*t,{x:(r+=((e+=(n-e)*t)-r)*t)+((e+=((n+=(o-n)*t)-e)*t)-r)*t,y:(i+=((s+=(a-s)*t)-i)*t)+((s+=((a+=(l-a)*t)-s)*t)-i)*t}}function w(t,r,i,e){const s=i-t,n=e-r;return Math.sqrt(s*s+n*n)}let P,W,k=-1;function D(t){const r=function(){k++,k==W&&(k=0);return P[k]}();t.fillStyle=r,t.strokeStyle=r}function I(t,r,i,e,s,n){const a=i/e;let o=h(s.drawing.value,n+a,n,1,0);if(1==r.direction&&(o=h(1-s.drawing.value,n,n+a,1,0)),o>0){const e=i*o;t.setLineDash([i]),t.lineDashOffset=r.direction*(e+i),t.stroke()}return a}function R(t,r,i,e){let s,n;if(1==r.drawing.value)for(s=r.lines.length,n=0;n<s;n++)T(t,r.lines[n],i,e);else for(s=r.drawingPaths.length*r.drawing.value,n=0;n<s;n++)F(t,r.drawingPaths[n],i,e,r.drawing.value)}function T(t,r,i,e){const s=r.pos;"a"==s.type?(t.lineStyle(0,e,0),t.beginFill(e),t.drawCircle(s.x,s.y,s.radius),t.endFill()):"m"==s.type?(t.lineStyle(i,e,1),t.moveTo(s.x,s.y)):"l"==s.type?t.lineTo(s.x,s.y):"b"==s.type&&t.bezierCurveTo(s.x,s.y,s.x2,s.y2,s.x3,s.y3),r.closePath&&t.closePath()}function F(t,r,i,e,s){"a"==r.type?(t.lineStyle(0,e,0),t.beginFill(e),t.drawCircle(r.x,r.y,r.radius*s),t.endFill()):1==r.start?(t.lineStyle(i,e,1),t.moveTo(r.x,r.y)):t.lineTo(r.x,r.y,1)}function C(t,r,i){const e=i.length,s=(t+e*(Math.abs(t/10|0)+1))%e;if(!Array.isArray(i[s]))return i[s]}function G(t,r){const i=[];let e,n,a;for(e=0;e<6;e++)n=10*e+20,a=10*e+90,i[e]={x1:n*s*r,x2:(t.rect.w-2*n)*s*r,y1:a*s*r,y2:(t.rect.h-a)*s*r-10*e*s*r};return i}function M(t,r){const i=[],e=[98,340,815];let n;for(n=0;n<3;n++)i[n]=e[n]*s*r;return i}function z(t){Object.assign(this,t)}function L(t){this.type=t[0],this.x=t[1]||0,this.y=t[2]||0,"b"==this.type?(this.x2=t[3]||0,this.y2=t[4]||0,this.x3=t[5]||0,this.y3=t[6]||0,null==t[7]?this.ratio={x:1,y:1,r:0,p:0,f:0,c:0,v:0}:(this.ratio={},this.ratio.x=null==t[7].x?1:t[7].x,this.ratio.y=null==t[7].y?1:t[7].y,this.ratio.r=t[7].r||0,this.ratio.p=t[7].p||0,this.ratio.f=t[7].f||0,this.ratio.c=t[7].c||0,this.ratio.v=t[7].v||0)):null==t[3]?this.ratio={x:1,y:1,r:0,p:0,f:0,c:0,v:0}:(this.ratio={},this.ratio.x=null==t[3].x?1:t[3].x,this.ratio.y=null==t[3].y?1:t[3].y,this.ratio.r=t[3].r||0,this.ratio.p=t[3].p||0,this.ratio.f=t[3].f||0,this.ratio.c=t[3].c||0,this.ratio.v=t[3].v||0)}function A(t,r,i,e){const s=r.range.r*i.x,n=(r.range.gx2-r.range.gx1)*s+r.range.gx1,a=(r.range.fr2-r.range.fr1)*s+r.range.fr1;return r.center.x+(t-n)*e.scale*a}function j(t,r,i,e){const s=r.range.r*i.y,n=(r.range.gy2-r.range.gy1)*s+r.range.gy1,a=(r.range.fr2-r.range.fr1)*s+r.range.fr1;return r.center.y+(t-n)*e.scale*a}Object.assign(z.prototype,{addRect:function(t){const r=new z(this);return r.x=this.x+t.x,r.y=this.y+t.y,r.x2=this.x2+t.x,r.y2=this.y2+t.y,r.x3=this.x3+t.x,r.y3=this.y3+t.y,r.rx=this.rx+t.x,r.ry=this.ry+t.y,r.sx=this.sx+t.x,r.sy=this.sy+t.y,r.radius<.5&&(r.radius=.5),r}}),Object.assign(L.prototype,{convert:function(t,r){const i=A(this.x,t,this.ratio,r),e=j(this.y,t,this.ratio,r),s=A(this.x2,t,this.ratio,r),n=j(this.y2,t,this.ratio,r),a=A(this.x3,t,this.ratio,r),o=j(this.y3,t,this.ratio,r),l=function(t,r,i){let e=0;"a"==t&&(e=r.range.cr*i.scale*i.fontRatio);return e}(this.type,t,r),h=new z(this);return h.x=i,h.y=e,h.x2=s,h.y2=n,h.x3=a,h.y3=o,h.radius=l,h}});let E=null;function H(t,r,i,e){const s=r.pointsLength.lines,n=t.scale;let a,o,l,h,f,c,y=s.length,p=[];const d=[],g=[];for(a=0;a<y;a++)h=s[a],E=null,d.push(V(h,i,n));for(y=d.length,a=0;a<y;a++){for(f=d[a],o=f.length,p=[],l=0;l<o;l++)h=f[l],h.rotation!=Y&&(e&&h.pat||p.push(h));c=r.typo.p[a].d,1==c&&p.reverse(),p.length>0&&(p[0].start=1,Array.prototype.push.apply(g,p))}return g}function V(t,r,i){const e=t.length;let s,n,a,o,l,f,c;const y=[];let p=1,d=1;for(r>-1&&(d=h(r,1,0,80,10)*i),s=0;s<e;s++)if(o=t[s],"a"==o.type)y.push(new z({x:o.x1,y:o.y1,rotation:0,type:"a",pat:o.pat,fix:o.fix,radius:o.radius}));else if(0==o.distance)l=new z({x:o.x1,y:o.y1,rotation:o.rotation,type:o.type,pat:o.pat,fix:o.fix}),c=q(l,E,o,1),null!=c&&(p&&(c.type="m",p=0),y.push(c)),E=new z(l);else for(a=Math.ceil(o.distance/d),a<3&&(a=3),o.vt&&(a=2),n=1;n<a;n++)f=n/(a-1),l="b"==o.type?X(o,f):new z({x:o.x1+(o.x2-o.x1)*f,y:o.y1+(o.y2-o.y1)*f,type:o.type}),0!=o.rotation&&1==f&&(l.rotation=o.rotation),o.pat&&1==f&&(l.pat=o.pat),o.fix&&1==f&&(l.fix=o.fix),a>0&&(c=q(l,E,o,f),null!=c&&(p&&(c.type="m",p=0),y.push(c))),E=new z(l);return y}function q(t,r,i,e){if(t.type=i.type,t.distance=i.distance,t.num=e,r&&null==t.rotation){const i=t.x-r.x,e=t.y-r.y,s=Math.atan2(i,e);t.rotation=-s}return t.rotation==Y?null:t}function X(t,r){const i=B(t.x1,t.x2,t.x3,t.x4,r),e=B(t.y1,t.y2,t.y3,t.y4,r),s=K(t.x1,t.x2,t.x3,t.x4,r),n=K(t.y1,t.y2,t.y3,t.y4,r);return new z({x:i,y:e,rotation:-Math.atan2(s,n)})}function B(t,r,i,e,s){const n=s*s;return t+(3*-t+s*(3*t-t*s))*s+(3*r+s*(-6*r+3*r*s))*s+(3*i-3*i*s)*n+e*(n*s)}function K(t,r,i,e,s){return 3*s*s*(3*r-t-3*i+e)+6*s*(t-2*r+i)+3*(-t+r)}const Q=Math.PI/180*180,U=Math.PI/180*90,Y=-100;function Z(t,r,i,e,s,n,a,o){const l=[],h=o.length;let f;for(f=0;f<h;f++)l.push({d:o[f].d,v:$(o[f].v,r,i)});return{rect:{w:t,h:824,fw:r,fh:i},ratio:{x1:e,x2:s,y1:n,y2:a},p:l}}function $(t,r,i){const e=t.length,s=r/2,n=i/2;let a,o;const l=[];for(o=0;o<e;o++)a=t[o],a[1]-=s,a[2]-=n,"b"==a[0]&&(a[3]-=s,a[4]-=n,a[5]-=s,a[6]-=n),l.push(new L(a));return l}function tt(t,r,i,e){const s=t-i,n=r-e;return-Math.atan2(s,n)}function rt(t,r,i,e,s,n,a,o,l){const h=K(t,i,s,a,l),f=K(r,e,n,o,l);return-Math.atan2(h,f)}const it=[{d:-1,v:[["m",0,352,{x:.55,y:.3,r:tt(0,352,143.5,0)}],["l",143.5,0,{r:tt(0,352,143.5,0),f:1}],["l",146.5,0,{r:tt(290,352,146.5,0),f:1,v:1}],["l",290,352,{x:.55,y:.3,f:1}]]},{d:-1,v:[["m",47,237,{r:U,p:1}],["l",243,237,{r:U,p:1,f:1}]]}],et=[{d:1,v:[["m",293.1,320.1,{r:rt(293.1,320.1,262.2,345,222.8,360,180,360,0),f:1}],["b",262.2,345,222.8,360,180,360],["b",80.6,360,0,279.4,0,180],["b",0,80.6,80.6,0,180,0],["b",222.8,0,262.2,15,293.1,39.9]]}],st=[{d:-1,v:[["m",95,352,{r:U,f:1}],["b",191.6,352,270,271.6,270,175,{r:Q}],["b",270,78.4,191.6,0,95,0,{r:U}],["l",0,0,{r:Q,f:1}],["l",0,352,{r:Q,f:1}],["l",95,352,{r:U,f:1}]]}],nt=[{d:-1,v:[["m",192,0,{x:0,r:U}],["l",0,0,{r:Q,f:1,x:.5}],["l",0,352,{f:1,x:.5}],["l",192,352,{x:0,r:U,f:1}]]},{d:-1,v:[["m",0,164,{r:U,p:1,x:.5}],["l",180,164,{x:0,r:U,f:1}]]}],at=[{d:1,v:[["m",202,180,{r:U,f:1}],["l",352,180,{f:1}],["b",352,279.4,279.4,360,180,360,{r:U}],["b",80.6,360,0,279.4,0,180,{r:Q}],["b",0,80.6,80.6,0,180,0,{r:U}],["b",222.8,0,262.1,14.9,293,39.9]]}],ot=[{d:-1,v:[["m",0,0,{y:0,r:Q}],["l",0,352,{y:0,r:Q,f:1}]]},{d:-1,v:[["m",232,0,{y:0,r:Q}],["l",232,352,{y:0,r:Q,f:1}]]},{d:-1,v:[["m",0,164,{r:U,p:1}],["l",232,164,{r:U,f:1,p:1}]]}],lt=[{d:1,v:[["m",0,352,{y:0,r:Q,f:1}],["l",0,0,{y:0,r:Q}]]}],ht=[{d:1,v:[["m",0,311,{r:rt(0,311,16.2,341.6,49.3,356,86,356,0),f:1}],["b",16.2,341.6,49.3,356,86,356,{r:U}],["b",133.5,356,172,317.5,172,270],["l",172.5,0,{y:0,r:Q}]]}],ft=[{d:-1,v:[["m",0,352,{y:0,r:Q}],["l",0,0,{r:Q,f:1}],["l",3,0,{r:Q,p:1,f:1,v:1}],["l",247,351,{r:Q,p:1,f:1}],["l",250,351,{r:Q,f:1,v:1}],["l",250,0,{y:0,r:Q,f:1}]]}],ct=[{d:1,v:[["m",360,180,{r:Q,p:1,f:1}],["b",360,279.4,279.4,360,180,360,{r:U}],["b",80.6,360,0,279.4,0,180,{r:Q}],["b",0,80.6,80.6,0,180,0,{r:U}],["b",279.4,0,360,80.6,360,180,{r:Q,c:1}]]}],yt=[{d:1,v:[["m",0,295.4,{r:rt(0,295.4,17.6,332.1,58.3,360,110.3,360,0),f:1}],["b",17.6,332.1,58.3,360,110.3,360],["b",173.9,360,223.8,329.6,224,271],["b",224.2,214.7,180.7,189.6,112.4,173.3],["b",47.3,157.7,10.9,130.6,12,84.4],["b",13.3,29.8,57.3,0,114.8,0],["b",158.4,0,196.5,20.5,212,51.3]]}],pt=[{d:1,v:[["m",250,0,{y:0,r:Q}],["l",250,231,{r:Q}],["b",250,300,194,356,125,356,{r:U}],["b",56,356,0,300,0,231,{r:Q}],["l",0,0,{y:0,r:Q}]]}],dt=[{d:-1,v:[["m",0,0,{x:.6,y:.3,r:tt(0,0,135,186)}],["l",135,186,{r:Q,f:1}],["l",270,0,{x:.6,y:.3,f:1}]]},{d:-1,v:[["m",135,186,{r:Q,p:1}],["l",135,352,{y:0,f:1}]]}],gt={A:Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it))),B:Z(596,209,352,-10,-10,0,0,[{d:1,v:[["m",0,164,{r:U,p:1}],["l",116,164,{r:U,p:1,f:1}],["b",167.4,164,209,205.6,209,257,{r:Q}],["b",209,308.4,167.4,352,116,352,{r:U}],["l",0,352,{r:Q,f:1}],["l",0,0,{r:Q,f:1}],["l",116,0,{r:U}],["b",161.3,0,198,36.7,198,82,{r:Q}],["b",198,127.3,161.3,164,116,164,{r:U}]]}]),C:Z(700,293.1,360,0,0,0,0,JSON.parse(JSON.stringify(et))),D:Z(721,270,352,-10,-10,0,0,JSON.parse(JSON.stringify(st))),E:Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt))),F:Z(510,192,352,-5,-80,0,0,[{d:-1,v:[["m",192,0,{x:0,r:U}],["l",0,0,{r:Q,f:1,x:.5}],["l",0,352,{y:0,f:1,x:.5}]]},{d:-1,v:[["m",0,164,{r:U,p:1,x:.5}],["l",180,164,{x:0,r:U,f:1}]]}]),G:Z(840,352,360,0,0,0,0,JSON.parse(JSON.stringify(at))),H:Z(684,232,352,0,0,0,0,JSON.parse(JSON.stringify(ot))),I:Z(249,0,352,0,0,0,0,JSON.parse(JSON.stringify(lt))),J:Z(472,172.5,355.5,10,20,-2,-2,JSON.parse(JSON.stringify(ht))),K:Z(616,232,352,-10,-20,0,0,[{d:-1,v:[["m",0,0,{y:0,r:Q}],["l",0,352,{y:0,r:Q,f:1}]]},{d:-1,v:[["m",212,0,{x:.7,y:.7,r:tt(212,0,0,162.5)}],["l",0,162.5,{r:U,p:1}],["l",0,165.5,{r:U,p:1,v:1}],["l",232,352,{x:.7,y:.7,f:1}]]}]),L:Z(529,192,352,-10,-20,0,0,[{d:-1,v:[["m",0,0,{y:0}],["l",0,352,{f:1}],["l",192,352,{x:0,f:1}]]}]),M:Z(885,330,352,0,0,0,0,[{d:-1,v:[["m",0,352,{y:0,r:Q}],["l",0,0,{r:Q,f:1}],["l",3,0,{r:Q,p:1,f:1,v:1}],["l",163.5,330,{r:tt(163.5,330,163.5,330),f:1}],["l",166.5,330,{r:tt(166.5,330,327,0),f:1,v:1}],["l",327,0,{r:Q,p:1,f:1}],["l",330,0,{r:Q,f:1,v:1}],["l",330,352,{y:0,r:Q,f:1}]]}]),N:Z(721,250,352,0,0,0,0,JSON.parse(JSON.stringify(ft))),O:Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct))),P:Z(568,210,352,-10,-10,-.5,-.5,[{d:1,v:[["m",0,352,{y:0,f:1}],["l",0,0,{f:1}],["l",117,0,{r:U}],["b",168.4,0,210,41.6,210,93,{r:Q}],["b",210,144.4,168.4,186,117,186,{r:U}],["l",0,186,{r:U,p:1}]]}]),Q:Z(850,360,360,0,0,0,0,[{d:-1,v:[["m",360,180,{r:U,p:1,f:1}],["b",360,80.6,279.4,0,180,0,{r:U}],["b",80.6,0,0,80.6,0,180,{r:Q}],["b",0,279.4,80.6,360,180,360,{r:U}],["b",279.4,360,360,279.4,360,180,{r:Q,c:1,f:1}]]},{d:-1,v:[["m",222,222,{x:.5,y:.5,r:tt(222,222,360,360)}],["l",360,360,{x:.5,y:.5,f:1}]]}]),R:Z(634,232,352,-10,-10,-.5,-.5,[{d:-1,v:[["m",0,186,{r:U,p:1}],["l",139,186,{r:U}],["b",190.4,186,232,144.4,232,93,{r:Q}],["b",232,41.6,190.4,0,139,0,{r:U}],["l",0,0,{r:Q,f:1}],["l",0,352,{y:0,f:1}]]},{d:-1,v:[["m",139,186,{p:1,r:tt(139,186,232,352)}],["l",232,352,{x:.5,y:.39,f:1}]]}]),S:Z(560,224,360,0,0,0,0,JSON.parse(JSON.stringify(yt))),T:Z(568,232,352,0,0,-.5,-.5,[{d:-1,v:[["m",0,0,{x:0,r:U}],["l",232,0,{x:0,r:U,f:1}]]},{d:-1,v:[["m",116,0,{r:Q,p:1}],["l",116,352,{y:0,r:Q,f:1}]]}]),U:Z(712,250,355,0,0,-.5,-.5,JSON.parse(JSON.stringify(pt))),V:Z(650,270,352,0,0,0,0,[{d:-1,v:[["m",0,0,{x:.6,y:.1,r:tt(0,0,133.5,352)}],["l",133.5,352,{r:tt(0,0,133.5,352),f:1}],["l",136.5,352,{r:tt(136.5,352,270,0),f:1,v:1}],["l",270,0,{x:.6,y:.1,f:1}]]}]),W:Z(894,390,352,0,0,0,0,[{d:-1,v:[["m",0,0,{x:.6,y:.05,r:tt(0,0,84.5,352)}],["l",84.5,352,{r:tt(0,0,84.5,352),f:1}],["l",87.5,352,{r:tt(87.5,352,193.5,0),f:1,v:1}],["l",193.5,0,{r:tt(87.5,352,193.5,0),f:1}],["l",196.5,0,{r:tt(196.5,0,302.5,352),f:1,v:1}],["l",302.5,352,{r:tt(196.5,0,302.5,352),f:1}],["l",305.5,352,{r:tt(305.5,352,390,0),f:1,v:1}],["l",390,0,{x:.6,y:.05,f:1}]]}]),X:Z(660,270,352,0,0,0,-7,[{d:-1,v:[["m",10,0,{x:.5,y:.3,r:tt(10,0,270,352)}],["l",270,352,{x:.5,y:.5,f:1}]]},{d:-1,v:[["m",260,0,{x:.5,y:.3,r:tt(260,0,0,352)}],["l",0,352,{x:.5,y:.5,f:1}]]}]),Y:Z(673,270,352,0,0,0,0,JSON.parse(JSON.stringify(dt))),Z:Z(558,232,352,0,-5,0,0,[{d:-1,v:[["m",8,0,{x:0,r:U}],["l",224,0,{r:U,f:1}],["l",224,3,{r:Q,p:1,v:1}],["l",0,349,{r:Q,p:1}],["l",0,352,{r:U,f:1,v:1}],["l",232,352,{x:0,r:U,f:1}]]}])},xt=[{d:-1,v:[["m",232,8,{y:-3.4,r:Q}],["l",232,116,{r:Y}],["b",232,180.1,180.1,232,116,232,{r:U}],["b",51.9,232,0,180.1,0,116,{r:Q}],["b",0,51.9,51.9,0,116,0,{r:U}],["b",180.1,0,232,51.9,232,116,{r:Q}],["l",232,224,{y:-.1,r:Q,f:1}]]}],ut=[{d:1,v:[["m",212.1,182.9,{r:rt(212.1,182.9,191.1,213.2,156.1,233.1,116.5,233.1,0),f:1}],["b",191.1,213.2,156.1,233.1,116.5,233.1,{r:U}],["b",52.4,233.1,.5,181.2,.5,117.1,{r:Q}],["b",.5,53,52.4,1.1,116.5,1.1,{r:U}],["b",156.1,1.1,191.1,21,212.1,51.3]]}],bt=[{d:-1,v:[["m",232,0,{y:0}],["l",232,239,{r:Y}],["b",232,303.1,180.1,355,116,355,{r:U}],["b",51.9,355,0,303.1,0,239,{r:Q}],["b",0,174.9,51.9,123,116,123,{r:U}],["b",180.1,123,232,174.9,232,239,{r:Q}],["l",232,352,{y:0,f:1}]]}],vt=[{d:1,v:[["m",211.6,182.9,{r:rt(211.6,182.9,191.1,213.2,156.1,233.1,116.5,233.1,0),f:1}],["b",191.1,213.2,156.1,233.1,116.5,233.1,{r:U}],["b",52.4,233.1,.5,181.2,.5,117.1,{r:Q}],["b",.5,53,52.4,1.1,116.5,1.1,{r:U}],["b",176.4,1.1,224.9,47.2,225.5,106.1,{r:Q}],["l",.5,106.1,{r:Q,p:1}]]}],mt=[{d:-1,v:[["m",232,5,{y:-2.8}],["l",232,116,{r:Y}],["b",232,180.1,180.1,232,116,232,{r:U}],["b",51.9,232,0,180.1,0,116,{r:Q}],["b",0,51.9,51.9,0,116,0,{r:U}],["b",180.1,0,232,51.9,232,116,{r:Q}],["l",232,222],["b",234.5,300.3,180.2,338.5,116,338,{y:.64,r:U}],["b",76.2,337.7,36.6,320.7,15.7,290.1,{y:.64,f:1}]]}],St=[{d:-1,v:[["m",0,0,{y:0,r:Q}],["l",0,352,{y:0,f:1}]]},{d:-1,v:[["m",0,214,{r:Y}],["b",0,163.7,40.7,123,91,123,{r:U}],["b",141.3,123,182,163.7,182,214,{r:Q}],["l",182,352,{y:0,f:1}]]}],Ot=[{d:-1,v:[["m",0,130,{y:-3.3}],["l",0,352,{y:0,f:1}]]},{d:-1,v:[["m",0,214,{y:0,r:Q,p:1}],["b",0,163.7,40.7,123,91,123,{r:U}],["b",141.3,123,182,163.7,182,214,{r:Q}],["l",182,352,{y:0,f:1}]]}],Jt=[{d:1,v:[["m",232,116,{r:Q,p:1,f:1}],["b",232,180.1,180.1,232,116,232,{r:U}],["b",51.9,232,0,180.1,0,116,{r:Q}],["b",0,51.9,51.9,0,116,0,{r:U}],["b",180.1,0,232,51.9,232,116,{r:Q,c:1}]]}],Nt=[{d:1,v:[["m",0,295.4*.642,{r:rt(0,295.4*.642,11.2992,332.1*.642,58.3*.642,231.12,70.8126,231.12,0),f:1}],["b",11.2992,332.1*.642,58.3*.642,231.12,70.8126,231.12],["b",173.9*.642,231.12,223.8*.642,329.6*.642,143.808,173.982],["b",143.9364,137.8374,116.0094,121.7232,112.4*.642,173.3*.642],["b",30.3666,101.2434,10.9*.642,130.6*.642,12*.642,54.1848],["b",8.5386,29.8*.642,36.7866,0,73.7016,0],["b",101.6928,0,126.153,13.161,136.104,51.3*.642]]}],_t=[{d:-1,v:[["m",0,130,{y:-3}],["l",0,265,{r:Q}],["b",0,315.3,40.7,356,91,356,{r:U}],["b",141.3,356,182,315.3,182,265,{r:Q,p:1,f:1}]]},{d:-1,v:[["m",182,130,{y:-3}],["l",182,352,{y:0,f:1}]]}],wt=[{d:-1,v:[["m",225.5,0,{y:-3,r:tt(225.5,0,116.3,248.8)}],["l",116.3,248.8,{x:.5,y:.64}],["b",71.8,349.6,0,331.5,0,331.5,{x:.5,y:.64,r:rt(0,331.5,71.8,349.6,116.3,248.8,0,331.5,0),f:1}]]},{d:-1,v:[["m",3.2,0,{y:-3,r:tt(3.2,0,125.7,226.6)}],["l",125.7,226.6,{p:1,f:1}]]}],Pt={a:Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt))),b:Z(600,232,352,-10,-2,0,0,[{d:-1,v:[["m",0,0,{y:0,r:Q}],["l",0,239,{r:Y}],["b",0,303.1,51.9,355,116,355,{r:U}],["b",180.1,355,232,303.1,232,239,{r:Q}],["b",232,174.9,180.1,123,116,123,{r:U}],["b",51.9,123,0,174.9,0,239,{r:Q}],["l",0,352,{y:0,r:Q,f:1}]]}]),c:Z(520,212.1,233.1,2,-10,-64,-64,JSON.parse(JSON.stringify(ut))),d:Z(600,232,352,10,2,0,0,JSON.parse(JSON.stringify(bt))),e:Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt))),f:Z(356,232,352,-40,-40,0,0,[{d:-1,v:[["m",166.6,33,{x:.5,r:rt(166.6,33,159.3,13.1,139.2,0,116.9,0,0)}],["b",159.3,13.1,139.2,0,116.9,0,{r:U}],["b",88.2,0,65,23.2,65,51.9,{r:Q}],["l",65,352,{y:0,f:1}]]},{d:-1,v:[["m",0,130,{x:0,r:U}],["l",154,130,{x:0,f:1}]]}]),g:Z(600,232,338,10,2,-117,-117,JSON.parse(JSON.stringify(mt))),h:Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(St))),i:Z(200,0,352,0,0,0,0,[{d:1,v:[["a",0,90,{y:-3}]]},{d:1,v:[["m",0,352,{y:0,f:1}],["l",0,130,{y:-3}]]}]),j:Z(220,115.9,352,-60,-60,0,0,[{d:1,v:[["a",0,90,{y:-3}]]},{d:1,v:[["m",-115.9,444,{x:.4,y:.63,r:rt(-115.9,444,12.6-115.9,454.4,29.6-115.9,460.2,-70,461.2,0),f:1}],["b",12.6-115.9,454.4,29.6-115.9,460.2,-70,461.2,{x:.4,y:.63,r:U}],["b",84.5-115.9,463.5,0,435.1,0,396.4,{x:.4,y:.63,r:Q}],["l",0,130,{y:-3}]]}]),k:Z(450,164,352,-10,-10,0,0,[{d:-1,v:[["m",0,0,{y:0,r:Q}],["l",0,352,{y:0,f:1}]]},{d:-1,v:[["m",160,130,{x:.7,y:0,r:tt(164,130,0,234.5),f:1}],["l",0,234.5,{r:U,p:1}],["l",0,237.5,{r:U,p:1,v:1}],["l",164,352,{x:.7,y:.7,f:1}]]}]),l:Z(200,0,352,0,0,0,0,[{d:1,v:[["m",0,352,{y:0,f:1}],["l",0,0,{y:0}]]}]),m:Z(740,300,352,0,0,0,0,[{d:-1,v:[["m",0,130,{y:-3.6}],["l",0,352,{y:0,f:1}]]},{d:-1,v:[["m",0,198,{y:0,r:Q,p:1}],["b",0,156.6,33.6,123,75,123,{r:U}],["b",116.4,123,150,156.6,150,198,{r:Q}],["l",150,352,{y:0,f:1}]]},{d:-1,v:[["m",150,198,{y:0,r:Q,p:1}],["b",150,156.6,183.6,123,225,123,{r:U}],["b",266.4,123,300,156.6,300,198,{r:Q}],["l",300,352,{y:0,f:1}]]}]),n:Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(Ot))),o:Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt))),p:Z(600,232,338,-10,-2,-117,-117,[{d:-1,v:[["m",0,5,{y:-2.8}],["l",0,116,{r:Y}],["b",0,180.1,51.9,232,116,232,{r:U}],["b",180.1,232,232,180.1,232,116,{r:Q}],["b",232,51.9,180.1,0,116,0,{r:U}],["b",51.9,0,0,51.9,0,116,{r:Q}],["l",0,338,{y:0,f:1}]]}]),q:Z(600,232,338,10,2,-117,-117,[{d:-1,v:[["m",232,5,{y:-2.8}],["l",232,116,{r:Y}],["b",232,180.1,180.1,232,116,232,{r:U}],["b",51.9,232,0,180.1,0,116,{r:Q}],["b",0,51.9,51.9,0,116,0,{r:U}],["b",180.1,0,232,51.9,232,116,{r:Q}],["l",232,338,{y:0,f:1}]]}]),r:Z(340,119.2,352,-20,-20,0,0,[{d:-1,v:[["m",0,130,{y:-3.3}],["l",0,352,{y:0,f:1}]]},{d:-1,v:[["m",0,181,{r:Q,p:1}],["b",0,181,41.9,101.2,119.2,128.5,{x:0,y:2,r:rt(119.2,128.5,41.9,101.2,0,181,119.2,128.5,0),f:1}]]}]),s:Z(400,143.808,231.12,0,0,-64,-64,JSON.parse(JSON.stringify(Nt))),t:Z(356,232,352,-30,-30,0,0,[{d:-1,v:[["m",65,0,{y:0}],["l",65,304.2],["b",65,332.9,88.2,356.1,116.9,356.1,{r:U}],["b",139.2,356.1,159.3,343,166.6,317.1,{x:0,f:1}]]},{d:-1,v:[["m",0,130,{x:0,r:U}],["l",154,130,{x:0,f:1}]]}]),u:Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(_t))),v:Z(500,200,352,0,0,0,0,[{d:-1,v:[["m",0,130,{x:.6,y:-3,r:tt(0,130,98.5,352)}],["l",98.5,352,{r:tt(0,130,98.5,352),f:1}],["l",101.5,352,{r:tt(101.5,352,200,130),f:1,v:1}],["l",200,130,{x:.6,y:-3,f:1}]]}]),w:Z(700,310,352,0,0,0,0,[{d:-1,v:[["m",0,130,{x:.6,y:-3,r:tt(0,130,76.5,352)}],["l",76.5,352,{r:tt(0,130,76.5,352),f:1}],["l",79.5,352,{r:tt(79.5,352,153.5,130),f:1,v:1}],["l",153.5,130,{y:1,r:tt(79.5,352,153.5,130),f:1}],["l",156.5,130,{y:1,r:tt(156.5,130,231.5,352),f:1,v:1}],["l",231.5,352,{r:tt(156.5,130,231.5,352),f:1}],["l",234.5,352,{r:tt(234.5,352,310,130),f:1,v:1}],["l",310,130,{x:.6,y:-3,f:1}]]}]),x:Z(490,210,352,0,0,0,-7,[{d:-1,v:[["m",10,130,{x:.5,y:-1,r:tt(10,130,210,352)}],["l",210,352,{x:.5,y:.5,f:1}]]},{d:-1,v:[["m",200,130,{x:.5,y:-1,r:tt(200,130,0,352)}],["l",0,352,{x:.5,y:.5,f:1}]]}]),y:Z(500,225.5,331.5,10,10,-119,-119,JSON.parse(JSON.stringify(wt))),z:Z(420,172,352,0,0,0,0,[{d:-1,v:[["m",6,130,{x:-.5,y:1,r:U}],["l",166,130,{x:1.8,y:1,r:U,f:1}],["l",166,133,{x:1.8,y:1,r:Q,p:1,v:1}],["l",0,349,{x:1.7,r:Q,p:1}],["l",0,352,{x:1.7,r:U,f:1,v:1}],["l",172,352,{x:-.4,r:U,f:1}]]}])},Wt={0:Z(660,270,360,0,0,0,0,[{d:1,v:[["m",270,180,{r:Q,p:1,f:1}],["b",270,279.4,209.6,360,135,360,{r:U}],["b",60.4,360,0,279.4,0,180,{r:Q}],["b",0,80.6,60.4,0,135,0,{r:U}],["b",209.6,0,270,80.6,270,180,{r:Q,c:1}]]}]),1:Z(380,76,352,15,15,0,0,[{d:-1,v:[["m",0,51,{x:-2,y:2,r:tt(0,51,73,0)}],["l",73,0,{r:Q,p:1}],["l",76,0,{r:Q,f:1,v:1}],["l",76,352,{y:0,f:1}]]}]),2:Z(580,210,356,0,0,2,2,[{d:-1,v:[["m",3.9,68.8,{x:1.2,y:1.2,r:rt(3.9,68.8,16.7,29,54.2,3.1,98.2,.2,0)}],["b",16.7,29,54.2,3.1,98.2,.2],["b",151.8,-3.3,208.5,38.3,198.9,100.1],["b",197.1,111.8,196.4,142.4,101.5,235.2],["b",11.4,323.2,0,353,0,353,{r:Y}],["l",0,353,{r:U,p:1}],["l",0,356,{r:U,f:1,v:1}],["l",210,356,{x:-.5,f:1}]]}]),3:Z(580,222.1,360,0,0,0,0,[{d:-1,v:[["m",10.7,66.3,{r:rt(10.7,66.3,11.2,64.8,11.7,63.3,12.3,61.8,0)}],["b",11.2,64.8,11.7,63.3,12.3,61.8,{r:Y}],["b",25.8,25.9,64.5,0,110.1,0,{r:U}],["b",167,0,213.1,40.3,213.1,90,{r:Q}],["b",213.1,139.7,167,180,110.1,179.9,{r:U,f:1}],["l",100.1,179.9,{x:-5,y:1,r:U,f:1}],["l",110.1,180,{r:U,p:1}],["b",172,180,222.1,220.3,222.1,270,{r:Q}],["b",222.1,319.7,172,360,110.1,360,{r:U}],["b",56.9,360,12.4,330.2,1,290.3,{f:1}]]}]),4:Z(596,236,352,0,0,0,0,[{d:1,v:[["m",175,352,{y:0,f:1}],["l",175,0,{f:1}],["l",172,0,{r:U,p:1,v:1}],["l",0,273,{r:Q,p:1}],["l",0,276,{r:U,f:1,v:1}],["l",236,276,{x:-.5}]]}]),5:Z(596,208.5,356,0,-5,-2,-2,[{d:1,v:[["m",0,295.7,{r:rt(0,295.7,15.3,333.8,52.2,356.2,97.5,356,0),f:1}],["b",15.3,333.8,52.2,356.2,97.5,356,{r:U}],["b",159.1,355.7,206.1,306.9,208.5,240.8,{r:Q}],["b",210.9,173.9,162.7,120.8,97.5,125.6,{r:U}],["b",59.4,128.4,25.5,145.8,5.6,176.4,{f:1}],["l",5.6,176.4,{r:Y}],["l",5.6-3,176.4,{r:Q,p:1,v:1}],["l",11.5,0,{r:U,f:1}],["l",193.5,0,{x:-.5}]]}]),6:Z(596,215.8,360,0,-2,0,0,[{d:1,v:[["m",7.6,272.3,{r:Q,p:1,f:1}],["b",6.4,265.8,5.8,259.1,5.8,252.2,{r:Q}],["b",5.8,192.6,52.8,144.2,110.8,144.2,{r:U}],["b",168.7,144.2,215.8,192.6,215.8,252.2,{r:Q}],["b",215.8,311.9,168.7,360,110.8,360,{r:U}],["b",59.5,360,16.8,322.4,7.6,272.4,{r:Y}],["b",7.6,272.4,-44.1,8.8,122.2,.2],["b",165.5,-2.1,193.8,21,212.1,56.4]]}]),7:Z(540,213,352,0,0,0,0,[{d:-1,v:[["m",0,0,{x:0,r:U}],["l",213,0,{r:U,f:1}],["l",213,.1,{r:Y}],["l",72.7,352,{y:.1,f:1}]]}]),8:Z(596,224,360,0,0,0,0,[{d:1,v:[["m",112,180,{r:Q,p:1,f:1}],["b",50.1,180,0,220.3,0,270,{r:Q}],["b",0,319.7,50.1,360,112,360,{r:U}],["b",173.9,360,224,319.7,224,270,{r:Q}],["b",224,220.3,173.9,180,112,180,{r:U}],["b",55.1,180,9,139.7,9,90,{r:Q}],["b",9,40.3,55.1,0,112,0,{r:U}],["b",168.9,0,215,40.3,215,90,{r:Q}],["b",215,139.7,168.9,180,112,180,{r:Q,p:1,f:1}]]}]),9:Z(596,215.8,360,0,-2,0,0,[{d:-1,v:[["m",208.2,88,{r:Q,p:1,f:1}],["b",209.4,94.5,210,101.2,210,108,{r:Q}],["b",210,167.6,163,216,105,216,{r:U}],["b",47,216,-0,167.6,0,108,{r:Q}],["b",0,48.4,47,-0,105,0,{r:U}],["b",156.3,0,199,37.8,208.2,87.8,{r:Y}],["b",208.2,87.8,259.8,351.4,93.5,360],["b",50.3,362.3,21.9,339.2,3.6,303.8,{f:1}]]}])},kt={" ":Z(336,0,0,0,0,0,0,[{d:1,v:[]}]),tofu:Z(672,232,352,0,0,0,0,[{d:-1,v:[["m",0,0,{r:Q}],["l",232,0,{r:Q,f:1}],["l",232,352,{r:Q,f:1}],["l",0,352,{r:Q,f:1}],["l",0,0,{r:Q,p:1,f:1,c:1}]]},{d:1,v:[["m",0,0,{r:Q,p:1,f:1}],["l",232,352,{r:Y}]]}]),"?":Z(520,190.348,360,0,-5,0,0,[{d:1,v:[["a",89.174,356]]},{d:-1,v:[["m",0,87.8,{r:rt(0,87.8,12,-2.3,99.1,0,0,87.8,0)}],["b",0,87.8,12,-2.3,99.1,0,{r:U}],["b",186.2,2.4,204.5,75.2,180.9,121.4],["b",157.3,167.6,119.7,178.3,97.4,223.2],["b",90.5,237.1,88.1,249.8,88,260.8,{r:Q,f:1}]]}]),"¿":Z(520,190.348,360,0,-5,0,0,[{d:1,v:[["a",101.174,93]]},{d:-1,v:[["m",190.3,361,{r:rt(190.3,361,178.3,451.1,91.2,448.8,190.3,361,0)}],["b",190.3,361,178.3,451.1,91.2,448.8,{r:U}],["b",4.1,446.4,-14.2,373.6,9.4,327.4],["b",33,281.2,70.6,270.5,92.9,225.6],["b",99.8,211.7,102.2,199,102.3,188,{r:Q,f:1}]]}]),"!":Z(465,8,355,0,-5,0,0,[{d:1,v:[["a",4,356]]},{d:-1,v:[["m",4,0,{y:0}],["l",4,260.8,{f:1}]]}]),"¡":Z(465,8,355,0,-5,0,0,[{d:1,v:[["a",4,93]]},{d:-1,v:[["m",4,188],["l",4,448.8,{f:1,y:.3}]]}]),$:Z(568,224,360,0,0,0,0,[{d:-1,v:[["m",212,51.3,{r:rt(0,295.4,17.6,332.1,58.3,360,110.3,360,0),f:1}],["b",196.5,20.5,158.4,0,114.8,0],["b",57.3,0,13.3,29.8,12,84.4],["b",10.9,130.6,47.3,157.7,112.4,173.3],["b",180.7,189.6,224.2,214.7,224,271],["b",223.8,329.6,173.9,360,110.3,360],["b",58.3,360,17.6,332.1,0,295.4,{f:1}]]},{d:-1,v:[["m",112,-30,{y:0}],["l",112,390,{y:0,f:1}]]}]),"@":Z(820,343.425,360,0,0,-30,-30,[{d:-1,v:[["m",251.9,92.9,{r:tt(251.9,92.9,238.5,181.7)}],["l",238.5,181.7,{r:Y}],["b",227.8,236,194.7,267.2,143.7,259.2],["b",99.1,252.2,87.7,208.5,90.1,177.5],["b",92.5,148.4,118.1,91,183.3,99.1],["b",251,107.5,238.5,181.7,238.5,181.7,{r:Y}],["l",232.5,221.5],["b",232.5,221.5,227.2,257.6,256,263.6],["b",284.9,269.7,309,241.3,309,241.3,{r:Y}],["b",309,241.3,343.4,209,343.4,146.7],["b",343.4,84.3,297.4,3.5,178.6,.1],["b",59.7,-3.4,-5.3,105.2,.3,203.4],["b",6.1,303.7,93.2,354.5,175.5,359.5],["b",175.5,359.5,246.5,364.9,302.7,339.8,{f:1}]]}]),"#":Z(760,314,352,0,0,0,0,[{d:-1,v:[["m",117,0,{y:0,r:tt(117,0,47,352)}],["l",47,352,{y:0,f:1}]]},{d:-1,v:[["m",267,0,{y:0,r:tt(267,0,197,352)}],["l",197,352,{y:0,f:1}]]},{d:-1,v:[["m",24,117,{x:0,r:U}],["l",314,117,{x:0,f:1}]]},{d:-1,v:[["m",0,235,{x:0,r:U}],["l",290,235,{x:0,f:1}]]}]),"%":Z(920,388,360,0,0,0,0,[{d:-1,v:[["m",307.1,5.1,{x:0,y:0,r:tt(307.1,5.1,80.9,354.9)}],["l",80.9,354.9,{x:0,y:0,f:1}]]},{d:-1,v:[["m",146,73,{r:Q,p:1}],["b",146,113.3,113.3,146,73,146,{r:U}],["b",32.7,146,0,113.3,0,73,{r:Q}],["b",0,32.7,32.7,0,73,0,{r:U}],["b",113.3,0,146,32.7,146,73,{r:Q,c:1,f:1}]]},{d:-1,v:[["m",388,287,{r:Q,p:1}],["b",388,327.3,355.3,360,315,360,{r:U}],["b",274.7,360,242,327.3,242,287,{r:Q}],["b",242,246.7,274.7,214,315,214,{r:U}],["b",355.3,214,388,246.7,388,287,{r:Q,c:1,f:1}]]}]),"^":Z(596,176,352,0,0,0,0,[{d:-1,v:[["m",0,150,{r:tt(0,150,86.5,0)}],["l",86.5,0,{r:tt(0,150,86.5,0),f:1}],["l",89.5,0,{r:tt(89.5,0,176,150),f:1,v:1}],["l",176,150,{f:1}]]}]),"·":Z(231,8,355,0,0,0,0,[{d:1,v:[["a",4,183.5]]}]),"×":Z(712,176.8,176.8,0,0,0,0,[{d:-1,v:[["m",0,0,{x:0,y:0,r:tt(0,0,176.8,176.8)}],["l",176.8,176.8,{x:0,y:0,f:1}]]},{d:-1,v:[["m",176.8,0,{x:0,y:0,r:tt(176.8,0,0,176.88)}],["l",0,176.8,{x:0,y:0,f:1}]]}]),"÷":Z(712,188,0,0,0,0,0,[{d:1,v:[["a",94,110]]},{d:1,v:[["a",94,-110]]},{d:-1,v:[["m",0,0,{x:0,y:0,r:U}],["l",188,0,{x:0,y:0,f:1}]]}]),"«":Z(896,310,236,0,0,0,0,[{d:1,v:[["m",150,236,{r:tt(150,236,0,119.5),f:1}],["l",0,119.5,{r:tt(150,236,0,119.5),f:1}],["l",0,116.5,{r:tt(0,116.5,150,0),f:1,v:1}],["l",150,0]]},{d:1,v:[["m",310,236,{r:tt(310,236,160,119.5),f:1}],["l",160,119.5,{r:tt(310,236,160,119.5),f:1}],["l",160,116.5,{r:tt(160,116.5,310,0),f:1,v:1}],["l",310,0]]}]),"»":Z(896,310,236,0,0,0,0,[{d:1,v:[["m",0,236,{r:tt(0,236,150,119.5),f:1}],["l",150,119.5,{r:tt(0,236,0,119.5),f:1}],["l",150,116.5,{r:tt(150,116.5,0,0),f:1,v:1}],["l",0,0]]},{d:1,v:[["m",160,236,{r:tt(160,236,310,119.5),f:1}],["l",310,119.5,{r:tt(0,236,0,119.5),f:1}],["l",310,116.5,{r:tt(310,116.5,160,0),f:1,v:1}],["l",160,0]]}]),"&":Z(660,259.191,360,0,0,0,0,[{d:1,v:[["m",257.9,355,{x:.5,y:.5,r:tt(257.9,355,52.8,135.3),f:1}],["l",52.8,135.3],["b",52.8,135.3,-2.2,79.5,46.6,26.7],["b",46.6,26.7,68.1,0,101.8,0,{r:U}],["b",137.2,0,174.1,21.1,181.2,65.3],["b",188.6,111.7,142.6,142.9,108.9,162.9],["b",75.2,182.8,40.8,211.4,40.8,211.4,{r:Y}],["b",35,217.1,-34.7,273.7,22.2,330.5],["b",22.2,330.5,48.1,360,93.4,360,{r:U}],["b",138.6,360,212.2,322,259.2,200.5]]}]),"*":Z(558,183.597,212,0,0,0,0,[{d:-1,v:[["m",91.8,0,{x:0,y:0}],["l",91.8,212,{x:0,y:0,f:1}]]},{d:-1,v:[["m",0,53,{x:0,y:0,r:tt(0,53,183.6,159)}],["l",183.6,159,{x:0,y:0,f:1}]]},{d:-1,v:[["m",0,159,{x:0,y:0,r:tt(0,159,183.6,53)}],["l",183.6,53,{x:0,y:0,f:1}]]}]),"+":Z(712,250,250,0,0,0,0,[{d:-1,v:[["m",125,0,{x:0,y:0}],["l",125,250,{x:0,y:0,f:1}]]},{d:-1,v:[["m",0,125,{x:0,y:0,r:U}],["l",250,125,{x:0,y:0,f:1}]]}]),"=":Z(712,216,86,0,0,0,0,[{d:-1,v:[["m",0,0,{x:0,y:0,r:U}],["l",216,0,{x:0,y:0,f:1}]]},{d:-1,v:[["m",0,86,{x:0,y:0,r:U}],["l",216,86,{x:0,y:0,f:1}]]}]),"-":Z(712,188,0,0,0,0,0,[{d:-1,v:[["m",0,0,{x:0,y:0,r:U}],["l",188,0,{x:0,y:0,f:1}]]}]),_:Z(481,235,400,0,0,0,0,[{d:-1,v:[["m",0,400,{x:0,y:0,r:U}],["l",235,400,{x:0,y:0,f:1}]]}]),":":Z(231,8,355,0,0,0,0,[{d:1,v:[["a",4,183.5]]},{d:1,v:[["a",4,353.5]]}]),";":Z(231,8,355,0,0,0,0,[{d:1,v:[["a",4,183.5]]},{d:-1,v:[["m",4,350,{x:0,y:2,r:tt(4,350,-6,430)}],["l",-6,430,{x:0,y:.5,f:1}]]}]),".":Z(231,8,355,0,0,0,0,[{d:1,v:[["a",4,353.5]]}]),",":Z(231,10,355,10,10,0,0,[{d:-1,v:[["m",10,350,{x:0,y:2,r:tt(10,350,0,430)}],["l",0,430,{x:0,y:.5,f:1}]]}]),"'":Z(173,0,360,0,0,0,0,[{d:-1,v:[["m",0,0,{x:0,y:0}],["l",0,80,{x:0,y:0,f:1}]]}]),'"':Z(297,60,360,0,0,0,0,[{d:-1,v:[["m",0,0,{x:-1.5,y:0}],["l",0,80,{x:-1.5,y:0,f:1}]]},{d:-1,v:[["m",60,0,{x:-1.5,y:0}],["l",60,80,{x:-1.5,y:0,f:1}]]}]),"~":Z(731,199.391,47.063,0,0,0,0,[{d:1,v:[["m",199.4,20.7,{x:0,y:0,r:rt(199.4,20.7,187.6,36.6,168.2,47.1,148.2,47.1,0),f:1}],["b",187.6,36.6,168.2,47.1,148.2,47.1,{x:0,y:0,r:U}],["b",129.1,47.1,112.1,36.6,95.3,25.5,{x:0,y:0}],["b",76.8,13.2,59.1,0,39.6,0,{x:0,y:0,r:U}],["b",22.3,0,10.9,8.9,0,20,{x:0,y:0}]]}]),"(":Z(365,107.865,360,0,0,0,0,[{d:1,v:[["m",107.9,360,{y:.8,r:rt(107.9,360,39.7,321.1,0,259.8,0,182.9,0),f:1}],["b",39.7,321.1,0,259.8,0,182.9,{y:.8,r:Q}],["b",0,100.2,39.7,38.9,107.9,0,{y:.8}]]}]),")":Z(365,107.865,360,0,0,0,0,[{d:-1,v:[["m",0,0,{y:.8,r:rt(0,0,68.2,38.9,107.9,100.2,107.9,177,0)}],["b",68.2,38.9,107.9,100.2,107.9,177,{y:.8,r:Q}],["b",107.9,259.8,68.2,321.1,0,360,{y:.8,f:1}]]}]),"{":Z(385,107.865,360,0,0,0,0,[{d:1,v:[["m",94.5,360,{x:-.5,r:U}],["l",77.9,360,{x:-.5}],["b",57.4,360,37,343,37,310.7,{x:-.5}],["l",37,233.4,{x:-.5}],["b",37,207.9,24.3,183.7,3.8,180.7,{x:-.5,r:U}],["l",3.8,179.8,{x:-.5,r:U,p:1}],["b",24.3,176.8,37,153.1,37,126.7,{x:-.5}],["l",37,49.4,{x:-.5}],["b",37,17.1,57.4,.1,77.9,.1,{x:-.5}],["l",94.5,.1,{x:-.5}]]}]),"}":Z(385,107.865,360,0,0,0,0,[{d:-1,v:[["m",13.4,.1,{x:-.5,r:U}],["l",30,.1,{x:-.5}],["b",50.4,.1,70.8,17.1,70.8,49.4,{x:-.5}],["l",70.8,126.7,{x:-.5}],["b",70.8,153.1,83.6,176.8,104,179.8,{x:-.5,r:U}],["l",104,180.7,{x:-.5,r:U,p:1}],["b",83.6,183.7,70.8,207.9,70.8,233.4,{x:-.5}],["l",70.8,310.7,{x:-.5}],["b",70.8,343,50.4,360,30,360,{x:-.5}],["l",13.4,360,{x:-.5}]]}]),"[":Z(365,66,352,0,0,0,0,[{d:-1,v:[["m",66,0,{x:-1,r:U}],["l",0,0,{r:Q,f:1}],["l",0,352,{r:Q,f:1}],["l",66,352,{x:-1,f:1}]]}]),"]":Z(365,66,352,0,0,0,0,[{d:-1,v:[["m",0,0,{x:-1,r:U}],["l",66,0,{r:Q,f:1}],["l",66,352,{r:Q,f:1}],["l",0,352,{x:-1,f:1}]]}]),"<":Z(423,90,352,0,0,0,0,[{d:-1,v:[["m",90,0,{x:-1,y:.3,r:tt(90,0,0,176)}],["l",0,176,{r:Q,f:1}],["l",90,352,{x:-1,y:.3,f:1}]]}]),">":Z(423,90,352,0,0,0,0,[{d:-1,v:[["m",0,0,{x:-1,y:.3,r:tt(0,0,90,176)}],["l",90,176,{r:Q,f:1}],["l",0,352,{x:-1,y:.3,f:1}]]}]),"/":Z(433,130,352,0,0,0,0,[{d:1,v:[["m",0,352,{r:tt(0,352,130,0),f:1,y:0}],["l",130,0,{y:0}]]}]),"þ":Z(600,232,338,-10,-2,-117,-117,[{d:-1,v:[["m",0,-106,{y:0}],["l",0,116,{r:Y}],["b",0,180.1,51.9,232,116,232,{r:U}],["b",180.1,232,232,180.1,232,116,{r:Q}],["b",232,51.9,180.1,0,116,0,{r:U}],["b",51.9,0,0,51.9,0,116,{r:Q}],["l",0,338,{y:0,f:1}]]}]),"Þ":Z(520,162,352,-5,-70,0,0,[{d:-1,v:[["m",0,0,{x:0,y:0,r:Q}],["l",0,352,{x:0,y:0,r:Q,f:1}]]},{d:1,v:[["m",0,281.6,{x:0,r:U,f:1,p:1}],["l",57,281.6,{x:-.5,r:U,f:1}],["b",115,281.6,162,233.4,162,175.4,{x:-.5,r:Q}],["b",162,117.4,115,70.4,57,70.4,{x:-.5,r:U}],["l",0,70.4,{x:0,r:U,f:1,p:1}]]}]),"ß":Z(596,209,352,-10,-10,0,0,[{d:1,v:[["m",0,348.3,{r:Q,f:1,x:0,y:0}],["l",0,104.3,{x:0}],["b",0,46,36,0,98.9,0,{x:0}],["b",145.2,0,191,27.9,191,81,{x:1}],["b",191,110.7,165.6,131.8,151.8,140.9],["l",140,148.8],["b",120.6,161.7,110.8,172.8,110.8,185.5],["b",110.8,206.7,131.6,213.8,140,217.5],["b",190.6,241.1,211,262.7,211,289.6],["b",211,329.5,174.8,352,142.5,352],["b",97.3,352,75.2,319.7,72.3,289.3]]}])};function Dt(t,r){const i=t,e=-60+r;return[{d:-1,v:[["m",-40+i,e,{x:0,y:0,r:tt(-40+i,e,0+i,60+e)}],["l",0+i,60+e,{x:0,y:0,f:1}]]}]}function It(t,r){const i=t,e=-60+r;return[{d:-1,v:[["m",40+i,e,{x:0,y:0,r:tt(40+i,e,0+i,60+e)}],["l",0+i,60+e,{x:0,y:0,f:1}]]}]}function Rt(t,r){const i=-68+t,e=0+r;return[{d:-1,v:[["m",0+i,50+e,{r:tt(0+i,50+e,66.5+i,0+e),y:0,x:0}],["l",66.5+i,0+e,{r:tt(0+i,50+e,66.5+i,0+e),y:0,x:0,f:1}],["l",69.5+i,0+e,{r:tt(69.5+i,0+e,136+i,50+e),y:0,x:0,f:1,v:1}],["l",136+i,50+e,{y:0,x:0,f:1}]]}]}function Tt(t,r){const i=t-76.24,e=r;return[{d:1,v:[["m",159.52+i,16.56+e,{x:-1,y:-.2,r:rt(159.52+i,16.56+e,150.08+i,29.28+e,134.56+i,37.68+e,118.56+i,37.68+e,0),f:1}],["b",150.08+i,29.28+e,134.56+i,37.68+e,118.56+i,37.68+e,{x:-1,y:-.2,r:U}],["b",103.28+i,37.68+e,89.68+i,29.28+e,76.24+i,20.4+e,{x:-1,y:-.2}],["b",61.44+i,10.56+e,47.28+i,0+e,31.68+i,0+e,{x:-1,y:-.2,r:U}],["b",17.84+i,0+e,8.72+i,7.12+e,0+i,16+e,{x:-1,y:-.2}]]}]}function Ft(t,r){return[{d:1,v:[["a",-50+t,r,{x:0,y:0}]]},{d:1,v:[["a",50+t,r,{x:0,y:0}]]}]}function Ct(t,r){const i=t-57,e=r;return[{d:1,v:[["m",112.7+i,0+e,{r:rt(112.7+i,0+e+i,10.1+e,110.1+i,19.3+e,105+i,27.7+e,0),x:0,y:0,f:1}],["b",112.7+i,10.1+e,110.1+i,19.3+e,105+i,27.7+e,{x:0,y:0}],["b",99.8+i,36.1+e,92.9+i,42.8+e,84.3+i,47.7+e,{x:0,y:0}],["b",75.7+i,52.6+e,66.7+i,55+e,57.3+i,55+e,{x:0,y:0}],["b",47.5+i,55+e,38.3+i,52.6+e,29.6+i,47.7+e,{x:0,y:0}],["b",20.8+i,42.8+e,13.8+i,36.1+e,8.5+i,27.7+e,{x:0,y:0}],["b",3.2+i,19.3+e,.5+i,10.1+e,.5+i,0+e,{x:0,y:0}]]}]}function Gt(t,r){const i=88+t,e=-116+r;return[{d:1,v:[["m",116+i,58+e,{r:Q,p:1,f:1}],["b",116+i,90.05+e,90.05+i,116+e,58+i,116+e,{r:U}],["b",25.95+i,116+e,0+i,90.05+e,0+i,58+e,{r:Q}],["b",0+i,25.95+e,25.95+i,0+e,58+i,0+e,{r:U}],["b",90.05+i,0+e,116+i,25.95+e,116+i,58+e,{r:Q,c:1}]]}]}function Mt(t,r){return[{d:1,v:[["m",t-40,r,{x:0,y:1,r:U}],["l",100+t,r,{x:0,y:1,f:1}]]}]}function zt(t,r){return[{d:-1,v:[["m",t,r,{p:1}],["b",9.3+t,11.6+r,15.6+t,27.1+r,15.6+t,40.9+r],["b",15.6+t,83.3+r,-18.2+t,107.8+r,-59.5+t,107.8+r],["b",-70.9+t,107.8+r,-82.9+t,106.2+r,-93.7+t,102.7+r,{x:.5,f:1}]]}]}function Lt(t,r){return[{d:-1,v:[["m",t,r,{p:1}],["b",-19.6+t,14.8+r,-42.2+t,37.9+r,-42.2+t,64.1+r],["b",-42.2+t,100.3+r,30.2-42.2+t,118.8+r,21.4+t,118.8+r],["b",68.3-42.2+t,118.8+r,72.9-42.2+t,118.4+r,35.2+t,117.6+r,{x:.5,f:1}]]}]}function At(t,r){return[{d:1,v:[["a",t,r,{x:0,y:0}]]}]}function jt(t,r){const i=-68+t,e=r;return[{d:-1,v:[["m",0+i,e,{r:tt(0+i,e,66.5+i,50+e),y:0,x:0}],["l",66.5+i,50+e,{r:tt(0+i,e,66.5+i,50+e),y:0,x:0,f:1}],["l",69.5+i,50+e,{r:tt(69.5+i,50+e,136+i,e),y:0,x:0,f:1,v:1}],["l",136+i,e,{y:0,x:0,f:1}]]}]}function Et(t,r){return[{d:1,v:[["m",t-50,r,{x:0,y:0}],["l",t+50,r,{x:0,y:0,f:1}]]}]}const Ht=[{d:1,v:[["m",0,352,{y:0,f:1}],["l",0,130,{y:-3}]]}],Vt=[{d:1,v:[["m",-115.9,444,{x:.4,y:.63,r:rt(-115.9,444,12.6-115.9,454.4,29.6-115.9,460.2,-70,461.2,0),f:1}],["b",12.6-115.9,454.4,29.6-115.9,460.2,-70,461.2,{x:.4,y:.63,r:U}],["b",84.5-115.9,463.5,0,435.1,0,396.4,{x:.4,y:.63,r:Q}],["l",0,130,{y:-3}]]}],qt={"Æ":Z(996,426,352,0,0,0,0,[{d:-1,v:[["m",426,0,{x:0,r:U}],["l",234,0,{x:.5,f:1,r:tt(234,0,0,352)}],["l",0,352,{x:.5,y:.5,f:1}]]},{d:-1,v:[["m",234,0,{x:.5,p:1}],["l",234,352,{f:1,x:.5}],["l",426,352,{f:1,x:0}]]},{d:-1,v:[["m",76.4,237,{r:U,p:1}],["l",234,237,{f:1,r:U,p:1}]]},{d:-1,v:[["m",234,164,{r:U,p:1,x:.5}],["l",414,164,{f:1,x:0}]]}]),"æ":Z(1e3,457.5,232,0,0,-64,-64,[{d:-1,v:[["m",232,8,{y:-3.4,r:Q}],["l",232,116,{r:Y}],["b",232,180.1,180.1,232,116,232,{r:U}],["b",51.9,232,0,180.1,0,116,{r:Q}],["b",0,51.9,51.9,0,116,0,{r:U}],["b",180.1,0,232,51.9,232,116,{r:Q}],["l",232,224,{y:-.1,r:Q,f:1}]]},{d:1,v:[["m",443.6,182.9,{r:rt(443.6,182.9,423.1,213.2,388.1,233.1,348.5,233.1,0),f:1}],["b",423.1,213.2,388.1,233.1,348.5,233.1,{r:U}],["b",284.4,233.1,232.5,181.2,232.5,117.1,{r:Q}],["b",232.5,53,284.4,1.1,348.5,1.1,{r:U}],["b",408.4,1.1,456.9,47.2,457.5,106.1,{r:Q}],["l",232.5,106.1,{r:Q,p:1}]]}]),"À":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Dt(145,-50))),"Á":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(It(145,-50))),"Â":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Rt(145,-100))),"Ã":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Tt(145,-90))),"Ä":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Ft(145,-70))),"Å":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Gt(0,0))),"Ă":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Ct(145,-110))),"Ą":Z(620,290,352,0,0,0,0,JSON.parse(JSON.stringify(it)).concat(Lt(290,352))),"à":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Dt(116,-60))),"á":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(It(116,-60))),"â":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Rt(116,-110))),"ã":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Tt(116,-100))),"ä":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Ft(116,-80))),"å":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Gt(-30,0))),"ă":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Ct(116,-120))),"ą":Z(600,232,232,10,2,-64,-64,JSON.parse(JSON.stringify(xt)).concat(Lt(232,224))),"Ć":Z(700,293.1,360,0,0,0,0,JSON.parse(JSON.stringify(et)).concat(Dt(180,-60))),"Ĉ":Z(700,293.1,360,0,0,0,0,JSON.parse(JSON.stringify(et)).concat(Rt(180,-110))),"Ċ":Z(700,293.1,360,0,0,0,0,JSON.parse(JSON.stringify(et)).concat(At(180,-80))),"Č":Z(700,293.1,360,0,0,0,0,JSON.parse(JSON.stringify(et)).concat(jt(180,-110))),"Ç":Z(700,293.1,360,0,0,0,0,JSON.parse(JSON.stringify(et)).concat(zt(180,360))),"ć":Z(520,212.1,233.1,2,-10,-64,-64,JSON.parse(JSON.stringify(ut)).concat(Dt(116.5,-68.9))),"ĉ":Z(520,212.1,233.1,2,-10,-64,-64,JSON.parse(JSON.stringify(ut)).concat(Rt(116.5,-118.9))),"ċ":Z(520,212.1,233.1,2,-10,-64,-64,JSON.parse(JSON.stringify(ut)).concat(At(116.5,-88.9))),"č":Z(520,212.1,233.1,2,-10,-64,-64,JSON.parse(JSON.stringify(ut)).concat(jt(116.5,-118.9))),"ç":Z(520,212.1,233.1,2,-10,-64,-64,JSON.parse(JSON.stringify(ut)).concat(zt(116.5,233.1))),"Đ":Z(721,270,352,-10,-10,0,0,JSON.parse(JSON.stringify(st)).concat(Mt(0,176))),"Ď":Z(721,270,352,-10,-10,0,0,JSON.parse(JSON.stringify(st)).concat(jt(100,-110))),"ď":Z(600,232,352,10,2,0,0,JSON.parse(JSON.stringify(bt)).concat((Xt=300,Bt=0,[{d:-1,v:[["m",Xt,Bt,{x:0,y:0}],["l",Xt,80+Bt,{x:0,y:0,f:1}]]}]))),"đ":Z(600,232,352,10,2,0,0,JSON.parse(JSON.stringify(bt)).concat(Mt(180,40))),"È":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(Dt(96,-60))),"É":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(It(96,-60))),"Ê":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(Rt(96,-110))),"Ë":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(Ft(96,-80))),"Ē":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(Et(96,-80))),"Ĕ":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(Ct(96,-120))),"Ė":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(At(96,-80))),"Ě":Z(520,192,352,-5,-80,0,0,JSON.parse(JSON.stringify(nt)).concat(jt(96,-110))),"è":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(Dt(112,-60))),"é":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(It(112,-60))),"ê":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(Rt(112,-110))),"ë":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(Ft(112,-80))),"ē":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(Et(112,-80))),"ĕ":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(Ct(112,-120))),"ė":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(At(112,-90))),"ě":Z(570,225.5,233.1,0,0,-64,-64,JSON.parse(JSON.stringify(vt)).concat(jt(112,-120))),"Ĝ":Z(840,352,360,0,0,0,0,JSON.parse(JSON.stringify(at)).concat(Rt(180,-110))),"Ğ":Z(840,352,360,0,0,0,0,JSON.parse(JSON.stringify(at)).concat(Ct(180,-120))),"Ġ":Z(840,352,360,0,0,0,0,JSON.parse(JSON.stringify(at)).concat(At(180,-80))),"Ģ":Z(840,352,360,0,0,0,0,JSON.parse(JSON.stringify(at)).concat(zt(180,360))),"ĝ":Z(600,232,338,10,2,-117,-117,JSON.parse(JSON.stringify(mt)).concat(Rt(116,-118.9))),"ğ":Z(600,232,338,10,2,-117,-117,JSON.parse(JSON.stringify(mt)).concat(Ct(116,-120))),"ġ":Z(600,232,338,10,2,-117,-117,JSON.parse(JSON.stringify(mt)).concat(At(116,-90))),"ģ":Z(600,232,338,10,2,-117,-117,JSON.parse(JSON.stringify(mt)).concat(It(116,-70))),"Ĥ":Z(684,232,352,0,0,0,0,JSON.parse(JSON.stringify(ot)).concat(Rt(116,-110))),"ĥ":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(St)).concat(Rt(91,-110))),"Ì":Z(249,0,352,0,0,0,0,JSON.parse(JSON.stringify(lt)).concat(Dt(0,-60))),"Í":Z(249,0,352,0,0,0,0,JSON.parse(JSON.stringify(lt)).concat(It(0,-60))),"Î":Z(249,0,352,0,0,0,0,JSON.parse(JSON.stringify(lt)).concat(Rt(0,-110))),"Ï":Z(249,0,352,0,0,0,0,JSON.parse(JSON.stringify(lt)).concat(Ft(0,-80))),"ì":Z(200,0,352,0,0,0,0,JSON.parse(JSON.stringify(Ht)).concat(Dt(0,70))),"í":Z(200,0,352,0,0,0,0,JSON.parse(JSON.stringify(Ht)).concat(It(0,70))),"î":Z(200,0,352,0,0,0,0,JSON.parse(JSON.stringify(Ht)).concat(Rt(0,10))),"ï":Z(200,0,352,0,0,0,0,JSON.parse(JSON.stringify(Ht)).concat(Ft(0,50))),"Ĵ":Z(472,172.5,355.5,10,20,-2,-2,JSON.parse(JSON.stringify(ht)).concat(Rt(172.5,-110))),"ĵ":Z(220,115.9,352,-60,-60,0,0,JSON.parse(JSON.stringify(Vt)).concat(Rt(0,20))),"Ñ":Z(721,250,352,0,0,0,0,JSON.parse(JSON.stringify(ft)).concat(Tt(125,-100))),"ñ":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(Ot)).concat(Tt(91,30))),"Ò":Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct)).concat(Dt(180,-60))),"Ó":Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct)).concat(It(180,-60))),"Ô":Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct)).concat(Rt(180,-110))),"Õ":Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct)).concat(Tt(180,-100))),"Ö":Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct)).concat(Ft(180,-80))),"Ø":Z(850,360,360,0,0,0,0,JSON.parse(JSON.stringify(ct)).concat([{d:1,v:[["m",0,360,{r:tt(0,360,360,0),f:1,x:0,y:1}],["l",360,0,{x:0,y:1}]]}])),"ò":Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt)).concat(Dt(116,-60))),"ó":Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt)).concat(It(116,-60))),"ô":Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt)).concat(Rt(116,-110))),"õ":Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt)).concat(Tt(116,-100))),"ö":Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt)).concat(Ft(116,-80))),"ø":Z(580,232,232,0,0,-64,-64,JSON.parse(JSON.stringify(Jt)).concat([{d:1,v:[["m",0,232,{r:tt(0,232,232,0),f:1,x:0,y:1}],["l",232,0,{x:0,y:1}]]}])),"Ŝ":Z(560,224,360,0,0,0,0,JSON.parse(JSON.stringify(yt)).concat(Rt(112.4,-110))),"ŝ":Z(400,143.808,231.12,0,0,-64,-64,JSON.parse(JSON.stringify(Nt)).concat(Rt(112.4*.642,-110))),"Ş":Z(560,224,360,0,0,0,0,JSON.parse(JSON.stringify(yt)).concat(zt(110.3,360))),"ş":Z(400,143.808,231.12,0,0,-64,-64,JSON.parse(JSON.stringify(Nt)).concat(zt(70.8126,231.12))),"Ù":Z(712,250,355,0,0,-.5,-.5,JSON.parse(JSON.stringify(pt)).concat(Dt(125,-50))),"Ú":Z(712,250,355,0,0,-.5,-.5,JSON.parse(JSON.stringify(pt)).concat(It(125,-50))),"Û":Z(712,250,355,0,0,-.5,-.5,JSON.parse(JSON.stringify(pt)).concat(Rt(125,-100))),"Ŭ":Z(712,250,355,0,0,-.5,-.5,JSON.parse(JSON.stringify(pt)).concat(Ct(125,-110))),"Ü":Z(712,250,355,0,0,-.5,-.5,JSON.parse(JSON.stringify(pt)).concat(Ft(125,-70))),"ù":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(_t)).concat(Dt(91,70))),"ú":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(_t)).concat(It(91,70))),"û":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(_t)).concat(Rt(91,20))),"ŭ":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(_t)).concat(Ct(91,10))),"ü":Z(520,182,352,0,0,0,0,JSON.parse(JSON.stringify(_t)).concat(Ft(91,50))),"Ý":Z(673,270,352,0,0,0,0,JSON.parse(JSON.stringify(dt)).concat(It(135,-60))),"ý":Z(500,225.5,331.5,10,10,-119,-119,JSON.parse(JSON.stringify(wt)).concat(It(116.3,-60))),"ÿ":Z(500,225.5,331.5,10,10,-119,-119,JSON.parse(JSON.stringify(wt)).concat(Ft(116.3,-90)))};var Xt,Bt;const Kt=Object.assign({},gt,Pt,Wt,kt,qt);function Qt(t){const r=Kt[t]||Kt.tofu;return r.v=t,r}function Ut(t,r,i,e){let s;return s=t.indexOf("\n")>0?t.split("\n"):t.indexOf("\\n")>0?t.split("\\n"):[t],0==i?function(t){const r=[],i=t.length;let e;for(e=0;e<i;e++)r[e]=t[e].split("");return r}(s):e?function(t,r,i){let e,s,n,o,l,h,f,c,y=0,p=0;const d=[];for(n=t.length,s=0;s<n;s++){for(f=t[s],y=0,d[p]=[],l=f.length,o=0;o<l;o++)c=f[o],e=Qt(c),h=a(e,r),y+=h.w,d[p].push(c),y>=i&&(p+=1,y=h.w,d[p]=[]);p+=1}const g=[];for(n=d.length,s=0;s<n;s++)e=d[s],e.length>0&&(" "==e[0]&&e.shift()," "==e[e.length-1]&&e.pop(),e.length>0&&g.push(e));return g}(s,r,i):function(t,r,i){let e,s,n,o,l,h,f,c,y,p,d=0,g=0,x=0;const u=[];for(c=t.length,l=0;l<c;l++){for(e=t[l].split(" "),u[x]=[],y=e.length,h=0;h<y;h++){for(g=0,s=e[h],p=s.length,f=0;f<p;f++)n=Qt(s[f]),o=a(n,r),g+=o.w;n=Qt(" "),o=a(n,r),g+=o.w,d+=g,d>i&&(x+=1,d=g,u[x]=[]),u[x].push(s)}x+=1,d=0}c=u.length;const b=[];for(l=0;l<c;l++)n=u[l].join(" ").split(""),n.length>0&&b.push(n);return b}(s,r,i)}function Yt(t,r){return{c:(t-r)/2,r:t-r,l:0}}class Zt{constructor(){this.lineWidth_=1,this.drawing_=[],this.data_=null,this.paths_=null,this.lines_=null,this.rect_={x:0,y:0,w:0,h:0},this.align_="left",this.scale_=1,this.fontRatio_=1}get data(){return this.data_}get paths(){return this.paths_}get lines(){return this.lines_}set lines(t){this.lines_=t}get lineWidth(){return this.lineWidth_}get fontRatio(){return this.fontRatio_}get scale(){return this.scale_}get rect(){return this.rect_}get drawing(){return this.drawing_}set align(t){this.align_!=t&&(this.align_=t,this.setPosition())}get align(){return this.align_}position(t,r){return(this.rect_.x!=t||this.rect_.y!=r)&&(this.rect_.x=t,this.rect_.y=r,this.setPosition(),!0)}setPosition(){const t=this.data_.length;let r,i;for(r=0;r<t;r++)i=this.data_[r],i.rect.x=i.originPos.x+this.rect_.x+(e=this.align_,s=i.alignGapX,"center"==e?s.c:"right"==e?s.r:s.l),i.rect.y=i.originPos.y+this.rect_.y;var e,s}updateDrawingPaths(){const t=this.data_.length;let r,i;for(r=0;r<t;r++)i=this.data_[r],i.drawingPaths=c(H(this,i,-1,!1),i)}updatePatternPaths(t){const r=this.data_.length;let i,e;for(i=0;i<r;i++)e=this.data_[i],e.rawPaths=H(this,e,t,!0)}updateWavePaths(t){const r=this.data_.length;let i,e;for(i=0;i<r;i++)e=this.data_[i],e.rawWavePaths=H(this,e,t,!1)}updateGuide(){const t=this.data_.length;let r,i;for(r=0;r<t;r++)i=this.data_[r],i.guide=G(i.typo,this.scale),i.grid=M(i.typo,this.scale)}update(t,r,i,s,n,h,f){const c=function(t){return(70-e)/(900-e)*(t-e)+e}(s),y=function(t){return 1/(80-e)*(t-e)}(c),p=function(t){return 54/(80-e)*(t-e)+4}(c),d=function(t){return t/500}(n),g=function(t,r){return 50*t*r}(h,d),x=function(t,r){return 50*t*r}(f,d),u=function(t){return(.78-1)*t+1}(y);this.fontRatio_=u,this.scale_=d,this.lineWidth_=function(t,r){let i=t*r;return i<1&&(i=1),i}(c,d);const b=Ut(t,d,r,i),v=b.length,m=v-1;let S,J,N,_,w,P,W,k,D,I=0,R=0,T=0,F=0,C=0,G=0;const M=[];for(S=0;S<v;S++){for(w=b[S],N=w.length,_=N-1,I=0,T=0,M[S]={tw:0,arr:[]},J=0;J<N;J++)W=w[J],P=Qt(W),k=a(P,d),I+=k.w,R=k.h,J<_&&(I+=g),S<m&&(R+=x),k.x=T,k.y=F,D={x:T,y:F},M[S].arr[J]={str:W,typo:P,rect:k,originPos:D,center:o(k.w,k.h,d),range:l(P,y,p)},T=I;F+=R,M[S].tw=I,C=Math.max(C,I),G+=R}this.rect_.w=C,this.rect_.h=G,this.drawing_=[];const z=[];let L,A;for(const t of M){L=Yt(C,t.tw);for(const r of t.arr){r.alignGapX=L,r.pointsLength=O(r,this),z.push(r),A={value:1},this.drawing_.push(A),r.drawing=A;for(const t of r.typo.p){t.cv=[];for(const i of t.v)t.cv.push(i.convert(r,this))}}}this.data_=z,this.setPosition()}updatePathsForRect(){const t=this.data_.length,r=[];let i,e;for(i=0;i<t;i++)e=this.data_[i],e.rawWavePaths&&(e.wavePaths=c(e.rawWavePaths,e)),e.rawPaths&&(e.paths=c(e.rawPaths,e),Array.prototype.push.apply(r,e.paths));this.paths_=r}updateLinesForRect(){const t=this.data_.length;let r,i;for(r=0;r<t;r++)i=this.data_[r],i.lines=f(i)}reset(){this.lineWidth_=1,this.drawing_=[],this.data_=null,this.paths_=null,this.lines_=null,this.rect_={x:0,y:0,w:0,h:0},this.align_="left",this.scale_=1,this.fontRatio_=1}}
/*!
   * VERSION: 1.6.3
   * DATE: 2019-09-13
   * https://leon-sans.com
   *
   * @license Copyright (c) 2019, Jongmin Kim. All rights reserved.
   **/class $t extends class{constructor(){this.handlers_={update:{listeners:[]}}}on(t,r){return"function"!=typeof r?(console.error("The listener callback must be a function, the given type is ".concat(typeof r)),!1):"string"!=typeof t?(console.error("The event name must be a string, the given type is ".concat(typeof t)),!1):(void 0===this.handlers_[t]&&(this.handlers_[t]={listeners:[]}),void this.handlers_[t].listeners.push(r))}off(t,r){if(void 0===this.handlers_[t])return console.error("This event: ".concat(t," does not exist")),!1;this.handlers_[t].listeners=this.handlers_[t].listeners.filter((t=>t.toString()!==r.toString()))}dispatch(t,r){this.handlers_[t].listeners.forEach((t=>{t(r)}))}}{constructor(){let{text:t="",size:r=500,weight:i=e,color:s=["#000000"],colorful:n=["#c5d73f","#9d529c","#49a9db","#fec330","#5eb96e","#fc5356","#f38f31"],tracking:a=0,leading:o=0,align:l="left",pathGap:h=.5,amplitude:f=.5,width:c=0,breakWord:y=!1,fps:p=30,isPath:d=!1,isWave:g=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this.size_=r,this.weight_=i,this.color_=s,this.colorful_=function(t){const r=t.slice(),i=r.length;let e,s,n=i;for(;n--;)e=Math.random()*i|0,s=r[n],r[n]=r[e],r[e]=s;return r}(n),this.tracking_=a,this.leading_=o,this.pathGap_=h,this.amplitude_=f,this.width_=c,this.breakWord_=y,this.fps_=p,this.fpsTime_=1e3/this.fps_,this.isPath_=d,this.isWave_=g,this.model=new Zt,this.str_=null,this.time_=null,this.isFps_=!1,this.isForceRander_=!1,this.updateID_=0,this.dPathsID_=null,this.pPathsID_=null,this.wPathsID_=null,this.guideID_=null,this.text=t,this.model.align=l}on(t,r){super.on(t,r),this.update()}off(t,r){super.off(t,r)}get text(){return this.str_}set text(t){this.str_!=t&&(this.str_=t,this.update())}get size(){return this.size_}set size(t){this.size_!=t&&(this.size_=t,this.update(),this.isForceRander_=!0)}get weight(){return this.weight_}set weight(t){t<e?t=e:t>900&&(t=900),this.weight_!=t&&(this.weight_=t,this.update(),this.isForceRander_=!0)}get color(){return this.color_}set color(t){this.color_!=t&&(this.color_=t)}get tracking(){return this.tracking_}set tracking(t){this.tracking_!=t&&(this.tracking_=t,this.update(),this.isForceRander_=!0)}get leading(){return this.leading_}set leading(t){this.leading_!=t&&(this.leading_=t,this.update(),this.isForceRander_=!0)}get align(){return this.model.align}set align(t){this.model.align!=t&&(this.model.align=t,this.updateID_++,this.updateSignal())}get pathGap(){return this.pathGap_}set pathGap(t){this.pathGap_!=t&&(this.pathGap_=t,this.updatePatternPaths(!0),this.updateWavePaths(!0),this.isForceRander_=!0)}get amplitude(){return this.amplitude_}set amplitude(t){this.amplitude_=t}get rect(){return this.model.rect}set maxWidth(t){this.width_!=t&&(this.width_=t,this.update())}get maxWidth(){return this.width_}set breakWord(t){this.breakWord_!=t&&(this.breakWord_=t,this.update())}get breakWord(){return this.breakWord_}get isPath(){return this.isPath_}set isPath(t){this.isPath_=t,this.updatePatternPaths(!0)}get isWave(){return this.isWave_}set isWave(t){this.isWave_=t,this.updateWavePaths(!0)}get fps(){return this.fps_}set fps(t){this.fps_=t,this.fpsTime_=1e3/this.fps_}get lineWidth(){return this.model.lineWidth}get scale(){return this.model.scale}get drawing(){return this.model.drawing}get data(){return this.model.data}get paths(){return this.model.paths}get drawingPaths(){return this.model.drawingPaths}get wavePaths(){return this.model.wavePaths}position(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.model.position(t,r)&&(this.updateID_++,this.updateSignal())}update(){this.updateID_++,this.model.update(this.str_,this.width_,this.breakWord_,this.weight_,this.size_,this.tracking_,this.leading_),this.isPath_||this.isWave_?(this.updatePatternPaths(),this.updateWavePaths()):this.updateSignal()}updateGuide(){this.guideID_!=this.updateID_&&(this.guideID_=this.updateID_,this.model.updateGuide())}updateDrawingPaths(){this.dPathsID_!=this.updateID_&&(this.dPathsID_=this.updateID_,this.model.updateDrawingPaths())}updatePatternPaths(t){this.isPath_&&(t||this.pPathsID_!=this.updateID_)&&(this.pPathsID_=this.updateID_,this.model.updatePatternPaths(this.pathGap_),this.isForceRander_=!0,this.updateSignal())}updateWavePaths(t){this.isWave_&&(t||this.wPathsID_!=this.updateID_)&&(this.wPathsID_=this.updateID_,this.model.updateWavePaths(this.pathGap_),this.isForceRander_=!0,this.updateSignal())}updateSignal(){this.model.updateLinesForRect(),this.model.updatePathsForRect(),this.dispatch("update",this.model)}reset(){this.size_=500,this.weight_=e,this.color_=["#000000"],this.tracking_=0,this.leading_=0,this.pathGap_=.5,this.amplitude_=.5,this.width_=0,this.breakWord_=!1,this.fps_=30,this.fpsTime_=1e3/this.fps_,this.isPath_=!1,this.isWave_=!1,this.str_=null,this.time_=null,this.isFps_=!1,this.isForceRander_=!1,this.updateID_=0,this.dPathsID_=null,this.pPathsID_=null,this.wPathsID_=null,this.guideID_=null,this.model.reset()}dispose(){this.reset(),this.model=null}drawPixi(t){const r=this.model.data.length;let i,e,s;for(i=0;i<r;i++)e=this.model.data[i],s=C(i,0,this.color_),R(t,e,this.lineWidth,s)}draw(t){t.lineWidth=this.lineWidth;const r=this.model.data.length;let i,e;for(i=0;i<r;i++)e=this.model.data[i],S(t,i,e,this.color_),y(t,e)}drawColorful(t){t.lineWidth=this.lineWidth,function(t,r,i){k=-1,P=i,W=P.length;const e=r.data.length;let s,a,o,l,h,f,c,y,p,d;for(s=0;s<e;s++)for(a=r.data[s],y=a.pointsLength.max,d=0,l=a.lines.length,c=null,o=0;o<l;o++)h=a.lines[o],f=h.pos,"a"==f.type?(D(t),t.beginPath(),t.arc(f.x,f.y,f.radius*a.drawing.value,0,n),t.fill(),t.closePath()):"m"==f.type?c=f:"l"==f.type?(p=w(c.x,c.y,f.x,f.y),p/r.scale>10&&(D(t),t.beginPath(),c&&t.moveTo(c.x,c.y),t.lineTo(f.x,f.y),d+=I(t,h,p,y,a,d)),c=f):"b"==f.type&&(p=N(c.x,c.y,f.x,f.y,f.x2,f.y2,f.x3,f.y3),p/r.scale>10&&(D(t),t.beginPath(),c&&t.moveTo(c.x,c.y),t.bezierCurveTo(f.x,f.y,f.x2,f.y2,f.x3,f.y3),d+=I(t,h,p,y,a,d)),c={x:f.x3,y:f.y3})}(t,this.model,this.colorful_)}wave(t,r){if(t.lineWidth=this.lineWidth,r){this.time_||(this.time_=r);r-this.time_>this.fpsTime_||this.isForceRander_?(this.time_=r,this.isFps_=!0):this.isFps_=!1}this.isForceRander_=!1;const i=this.model.data.length;let e,s;for(e=0;e<i;e++)s=this.model.data[e],S(t,e,s,this.color_),v(t,s,this.model.scale,this.amplitude_,this.weight_,this.isFps_)}pattern(t,r,i){const e=r*this.model.scale,s=i*this.model.scale,n=this.model.data.length;let a,o;for(a=0;a<n;a++)o=this.model.data[a],m(t,o,e,s)}grid(t){this.updateGuide();const r=this.model.data.length;let i,e;for(i=0;i<r;i++)e=this.model.data[i],x(t,e)}point(t){const r=this.model.data.length;let i,e;for(i=0;i<r;i++)e=this.model.data[i],p(t,e)}box(t){t.lineWidth=1,t.beginPath(),t.strokeStyle="#0b90dc",t.rect(this.model.rect.x,this.model.rect.y,this.model.rect.w,this.model.rect.h),t.stroke()}}let tr=0;const rr=2*Math.PI;class ir extends i.default.BrowserClip{get html(){return" <canvas> </canvas>"}onAfterRender(){this.cValue=0;const t=this.context.getElements("canvas")[0];this.sw=this.attrs.sw,this.sh=this.attrs.sh;this.ctx=t.getContext("2d"),t.width=2*this.sw,t.height=2*this.sh,t.style.width=this.sw+"px",t.style.height=this.sh+"px",this.ctx.scale(2,2);const r=new $t({text:this.attrs.text,color:this.attrs.color,weight:this.attrs.weight,isPath:!0,pathGap:this.attrs.pathGap||"colorPattern"===this.attrs.drawing?-1:0,isWave:"wave"===this.attrs.drawing,tracking:this.attrs.tracking,leading:this.attrs.leading,size:this.attrs.size||80,patternWidth:10,patternHeight:90,colorful:this.attrs.colorful});this.attrs.round?this.ctx.lineCap="round":this.ctx.lineCap="butt",this.attrs.multiply?this.ctx.globalCompositeOperation="multiply":this.ctx.globalCompositeOperation="source-over",this.setCustomEntity(this.attrs.canvasId,{leon:r,ctx:this.ctx,sw:this.sw,sh:this.sh,drawing:this.attrs.drawing,pathGap:this.attrs.pathGap,patternWidth:this.attrs.patternWidth,patternHeight:this.attrs.patternHeight}),this.leon=r}onAfterProgress(){if("colorPattern"===this.attrs.drawing){this.ctx.clearRect(0,0,this.sw,this.sh),this.ctx.lineWidth=.2;const t=this.attrs.patternWidth,r=this.leon.data.length;let i,e,s,n,a,o=0;for(i=0;i<r;i++)for(s=this.leon.data[i].paths,a=Math.round(s.length*this.leon.drawing[i].value),n=0;n<a;n++)e=s[n],this.ctx.fillStyle=this.randomColor(o),this.ctx.strokeStyle=this.randomColor(o),this.ctx.beginPath(),this.ctx.arc(e.x,e.y,t,0,rr),this.ctx.stroke(),o+=1;tr-=this.attrs.speed}}randomColor(t){return"hsl("+(t+tr)+",70%,50%)"}}var er={LeonAttrs:["completion_rate","weight","tracking","leading","size","pathGap","patternWidth","patternHeight"]};class sr extends t.Effect{getScratchValue(){const t={},r=this.element.entity.leon;return er.LeonAttrs.forEach((i=>{var e;return t[i]=null!==(e=r[i])&&void 0!==e?e:0})),t}drawning(){var t,r;const{drawing:i,ctx:e,leon:s,patternHeight:n,patternWidth:a}=this.element.entity;switch(i){case"colorful":s.drawColorful(e);break;case"pattern":s.pattern(e,null!==(t=s.patternWidth)&&void 0!==t?t:a,null!==(r=s.patternHeight)&&void 0!==r?r:n);break;default:s.draw(e)}}clearRect(){const{ctx:t,sw:r,sh:i}=this.element.entity;t.clearRect(0,0,r,i)}animate(t){const{leon:r}=this.element.entity;er.LeonAttrs.forEach((i=>{const e=this.targetValue[i],s=this.initialValue[i],n=t*(e-s)+s;r[i]=n,"completion_rate"===i&&r.drawing.forEach((t=>{t.value=n}))}))}onProgress(t){er.LeonAttrs.forEach((r=>{const i=this.initialValue[r],e=this.targetValue[r]-i,{leon:s}=this.element.entity;s[r]=this.getFraction(t)*e+i})),this.clearRect(),this.animate(this.getFraction(t)),this.drawning()}}const nr="color";return{npm_name:"@donkeyclip/motorcortex-leonsans",version:"1.3.0",Clip:{exportable:ir,attributesValidationRules:{...{canvasId:{type:"string",optional:!1},sw:{type:"number",optional:!0,min:0},sh:{type:"number",optional:!0,min:0},text:{type:"string",optional:!1},weight:{type:"number",optional:!0,min:0},round:{type:"boolean",optional:!0},multiply:{type:"boolean",optional:!0},drawing:{type:"enum",values:["drawing","pattern","colorful","colorPattern"],optional:!0},color:{optional:!0,type:"array",items:{optional:!0,type:"array",items:{type:nr,optional:!0}}},colorful:{optional:!0,type:"array",items:{type:nr,optional:!0}},pathGap:{type:"number",optional:!0},patternWidth:{type:"number",optional:!0},patternHeight:{type:"number",optional:!0},speed:{type:"number",optional:!0},tracking:{type:"number",optional:!0},leading:{type:"number",optional:!0},size:{type:"number",optional:!0}}}},incidents:[{exportable:sr,name:"LeonIncident",attributesValidationRules:{animatedAttrs:{type:"object",props:{LeonAttrs:{optional:!1,type:"object",props:{completion_rate:{type:"number",integer:!1,optional:!0,max:1,min:0},weight:{type:"number",optional:!0,min:0},pathGap:{type:"number",optional:!0},patternWidth:{type:"number",optional:!0},patternHeight:{type:"number",optional:!0},tracking:{type:"number",optional:!0},leading:{type:"number",optional:!0},size:{type:"number",optional:!0},selector:{type:"number",optional:!0}}}}}}}],compositeAttributes:er}}));
